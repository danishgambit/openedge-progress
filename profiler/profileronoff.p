DEFINE INPUT         PARAMETER plSet         AS LOGICAL    NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER plEnabled     AS LOGICAL    NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER plProfiling   AS LOGICAL    NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER plListings    AS LOGICAL    NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER plCoverage    AS LOGICAL    NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER pcDescription AS CHARACTER  NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER pcOutFile     AS CHARACTER  NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER pcOutDir      AS CHARACTER  NO-UNDO.
DEFINE INPUT-OUTPUT  PARAMETER pcTracing     AS CHARACTER  NO-UNDO.
DEFINE INPUT  PARAMETER lWriteOnStop         AS LOGICAL    NO-UNDO.


IF plSet THEN DO:
  PROFILER:ENABLED       = plEnabled.
  PROFILER:LISTINGS      = plListings.
  PROFILER:COVERAGE      = plCoverage.
  PROFILER:DESCRIPTION   = pcDescription.
  PROFILER:FILE-NAME     = SESSION:TEMP-DIR + pcOutFile.
  PROFILER:DIRECTORY     = pcOutDir.
  PROFILER:TRACE-FILTER  = pcTracing.
  PROFILER:PROFILING     = plProfiling.

  IF plProfiling = FALSE AND lWriteOnStop THEN
    PROFILER:WRITE-DATA().

END.

plEnabled     = PROFILER:ENABLED.       
plListings    = PROFILER:LISTINGS.      
plCoverage    = PROFILER:COVERAGE.      
pcDescription = PROFILER:DESCRIPTION.   
pcOutDir      = PROFILER:DIRECTORY.     
pcTracing     = PROFILER:TRACE-FILTER.  
plProfiling   = PROFILER:PROFILING.


MESSAGE "Profiler enabled: " PROFILER:ENABLED.
MESSAGE "Profiler Listings: " PROFILER:LISTINGS.
MESSAGE "Profiler trace-filter: " PROFILER:TRACE-FILTER.
MESSAGE "profiler Profiling: " PROFILER:PROFILING.

ERROR-STATUS:ERROR = FALSE.
